FROM builder as dive-git
RUN git clone "https://aur.archlinux.org/dive-git.git" && \
  cd "dive-git" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as fastmod
RUN git clone "https://aur.archlinux.org/fastmod.git" && \
  cd "fastmod" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as grocy
RUN git clone "https://aur.archlinux.org/grocy.git" && \
  cd "grocy" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as hadolint-bin
RUN git clone "https://aur.archlinux.org/hadolint-bin.git" && \
  cd "hadolint-bin" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as hstdb
RUN git clone "https://aur.archlinux.org/hstdb.git" && \
  cd "hstdb" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as i8kutils
RUN git clone "https://aur.archlinux.org/i8kutils.git" && \
  cd "i8kutils" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as insync
RUN git clone "https://aur.archlinux.org/insync.git" && \
  cd "insync" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as jackett
RUN git clone "https://aur.archlinux.org/jackett.git" && \
  cd "jackett" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as krew
RUN git clone "https://aur.archlinux.org/krew.git" && \
  cd "krew" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as nginx-mainline-mod-dav-ext
RUN git clone "https://aur.archlinux.org/nginx-mainline-mod-dav-ext.git" && \
  cd "nginx-mainline-mod-dav-ext" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as nginx-mod-fancyindex
RUN git clone "https://aur.archlinux.org/nginx-mod-fancyindex.git" && \
  cd "nginx-mod-fancyindex" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as ngrok
RUN git clone "https://aur.archlinux.org/ngrok.git" && \
  cd "ngrok" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as nomino
RUN git clone "https://aur.archlinux.org/nomino.git" && \
  cd "nomino" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as ntpd-rs
RUN git clone "https://aur.archlinux.org/ntpd-rs.git" && \
  cd "ntpd-rs" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as pushgateway
RUN git clone "https://aur.archlinux.org/pushgateway.git" && \
  cd "pushgateway" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as rua
RUN git clone "https://aur.archlinux.org/rua.git" && \
  cd "rua" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as rustdesk-bin
RUN git clone "https://aur.archlinux.org/rustdesk-bin.git" && \
  cd "rustdesk-bin" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as seafile-client

RUN git clone "https://aur.archlinux.org/libsearpc.git" && \
    cd "libsearpc" && \
    makepkg \
    --syncdeps \
    -sic \
    --noconfirm && \
    ls -lah && \
    cp *.pkg.tar.* /output && \
    cd .. && \
    rm -rf "libsearpc"

RUN git clone "https://aur.archlinux.org/seafile.git" && \
    cd "seafile" && \
    makepkg \
    --syncdeps \
    -sic \
    --noconfirm && \
    ls -lah && \
    cp *.pkg.tar.* /output && \
    cd .. && \
    rm -rf "seafile"

RUN git clone "https://aur.archlinux.org/seafile-client.git" && \
    cd "seafile-client" && \
    makepkg \
    --syncdeps \
    -sc \
    --noconfirm && \
    ls -lah && \
    cp *.pkg.tar.* /output && \
    cd .. && \
    rm -rf "seafile-client"
FROM builder as snapd
RUN git clone "https://aur.archlinux.org/snapd.git" && \
  cd "snapd" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as sonarr
RUN git clone "https://aur.archlinux.org/sonarr.git" && \
  cd "sonarr" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as steamcmd
RUN git clone "https://aur.archlinux.org/steamcmd.git" && \
  cd "steamcmd" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as teamviewer
RUN git clone "https://aur.archlinux.org/teamviewer.git" && \
  cd "teamviewer" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as telegraf-bin
RUN git clone "https://aur.archlinux.org/telegraf-bin.git" && \
  cd "telegraf-bin" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as tmux-cssh
RUN git clone "https://aur.archlinux.org/tmux-cssh.git" && \
  cd "tmux-cssh" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as tmux-xpanes
RUN git clone "https://aur.archlinux.org/tmux-xpanes.git" && \
  cd "tmux-xpanes" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output

FROM builder as uhk-agent-appimage
RUN git clone "https://aur.archlinux.org/uhk-agent-appimage.git" && \
  cd "uhk-agent-appimage" && \
  makepkg --syncdeps --noconfirm --clean && \
  cp *.pkg.tar.xz /output


FROM builder
COPY --from=dive-git /output /output
COPY --from=fastmod /output /output
COPY --from=grocy /output /output
COPY --from=hadolint-bin /output /output
COPY --from=hstdb /output /output
COPY --from=i8kutils /output /output
COPY --from=insync /output /output
COPY --from=jackett /output /output
COPY --from=krew /output /output
COPY --from=nginx-mainline-mod-dav-ext /output /output
COPY --from=nginx-mod-fancyindex /output /output
COPY --from=ngrok /output /output
COPY --from=nomino /output /output
COPY --from=ntpd-rs /output /output
COPY --from=pushgateway /output /output
COPY --from=rua /output /output
COPY --from=rustdesk-bin /output /output
COPY --from=seafile-client /output /output
COPY --from=snapd /output /output
COPY --from=sonarr /output /output
COPY --from=steamcmd /output /output
COPY --from=teamviewer /output /output
COPY --from=telegraf-bin /output /output
COPY --from=tmux-cssh /output /output
COPY --from=tmux-xpanes /output /output
COPY --from=uhk-agent-appimage /output /output
ENTRYPOINT [ "sleep", "infinity" ]
